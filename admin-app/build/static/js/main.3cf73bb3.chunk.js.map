{"version":3,"sources":["axios/axios.ts","components/election/election-list/ElectionList.tsx","components/election/Elections.tsx","features/voterMenuSlice.ts","components/voter/election-list/ElectionListItem.tsx","components/voter/election-list/ElectionList.tsx","components/voter/VoterMenu.tsx","components/voter/CreateVoterDialog.tsx","components/voter/voters-list/VoterList.tsx","components/voter/Voters.tsx","features/electionFormSlice.ts","components/election/create-election-form/AddCandidatesForm.tsx","components/election/create-election-form/AddVotersForm.tsx","components/election/create-election-form/ElectionForm.tsx","components/election/create-election-form/CreateElection.tsx","components/common/footer/Footer.tsx","components/common/container/ContentContainer.tsx","components/election/election-menu/tabs/TabPanel.tsx","features/electionManagerSlice.ts","components/election/election-menu/tabs-conent/ElectionStatus.tsx","components/election/election-menu/tabs-conent/VotersMenu.tsx","components/election/election-menu/tabs-conent/CandidatesMenu.tsx","components/common/chart/BarChart.tsx","components/election/election-menu/tabs-conent/Results.tsx","components/election/election-menu/tabs/ElectionMenuPanel.tsx","components/server/PeersList.tsx","components/server/Server.tsx","App.tsx","store/store.ts","index.tsx"],"names":["instance","axios","create","baseURL","useStyles","makeStyles","title","fontSize","color","fontWeight","ElectionList","elections","goToElectionMenu","classes","length","List","Divider","map","item","index","ListItem","button","Grid","container","alignItems","ListItemAvatar","Typography","className","election_name","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","box","marginTop","display","justifyContent","Elections","useState","setElections","history","useHistory","fetchCandidates","a","get","response","data","console","log","useEffect","xs","md","justify","Button","size","variant","push","electionName","voterMenuSlice","createSlice","name","initialState","voter","username","reducers","state","action","payload","setVoter","actions","fetchVoter","voterName","err","dispatch","fetchElections","padding","ElectionListItem","election","showDetails","setShowDetails","direction","election_description","start_date","end_date","root","width","minHeight","VoterMenu","votername","useParams","useDispatch","useSelector","isElectionsShow","setElectionsShow","onError","goBack","fetchInitialData","style","Paper","minWidth","textAlign","progressBar","successBtn","backgroundColor","failureBtn","background","CreateVoterDialog","open","handleClose","password","confirmPassword","loginData","setLoginData","isProgressShow","setProgressShow","isSuccess","isTouched","showSuccess","setSuccess","handleChange","event","target","value","sendLogin","post","Dialog","keepMounted","onClose","onSubmit","preventDefault","TextField","onChange","label","required","type","CircularProgress","VoterList","voters","goToVoterMenu","Voters","setVoters","openDialog","setOpenDialog","fetchVoters","electionsFormSlice","electionFormState","server_url","errors","titleError","startDateError","endDateError","serverUrlError","candidates","candidate_name","candidate_description","checked","setElectionFormState","setCandidates","setTitleError","setStartDateError","setEndDateError","setServerUrlError","AddCandidatesForm","next","previous","initialValue","initialValues","values","remove","AddVotersForm","createElection","Input","firstContainer","height","secondContainer","ElectionForm","electionTitle","startDate","endDate","serverUrl","start","moment","Box","flexDirection","error","helperText","InputLabelProps","shrink","CreateElection","activeStep","setActiveStep","previousStep","nextStep","Stepper","step","Step","StepLabel","getStepContent","Footer","ContentContainer","children","TabPanel","props","other","role","hidden","id","aria-labelledby","p","a11yProps","electionManagerSlice","is_published","results","setElection","setResults","electionInfoContainer","subTitle","ElectionStatus","electionManager","fetchElection","disabled","VotersMenu","Avatar","ListItemText","primary","CandidatesMenu","RenderBarChart","valueField","argumentField","text","Results","fetchResults","publishElectionResults","theme","flexGrow","palette","paper","ElectionMenuPanel","React","setValue","AppBar","position","elevation","Tabs","newValue","Tab","PeersList","peers","showPeers","setShowPeers","peer","margin","textField","success","failure","Server","setServerUrl","touched","result","serverResponse","setServerResponse","setPeers","pingServer","link","textDecoration","App","styles","Toolbar","to","exact","path","rootReducer","combineReducers","electionFormSlice","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAMeA,EAJEC,IAAMC,OAAO,CAC5BC,QAAS,2C,kHCsBLC,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,SACVC,MAAO,QACPC,WAAY,aA6CDC,MAzCf,YAAqE,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,iBAC5BC,EAAUT,IAEhB,OAAIO,EAAUG,OAAS,EAEnB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACCL,EAAUM,KAAI,SAACC,EAAgBC,GAAjB,OACb,eAACC,EAAA,EAAD,CAAsBC,QAAM,EAA5B,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAA3B,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAWlB,SAAS,QAAQC,MAAM,cAEpC,cAACkB,EAAA,EAAD,CAAYC,UAAWd,EAAQP,MAA/B,SACGY,EAAKU,mBAGV,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,MACLC,aAAW,OACXxB,MAAM,UACNyB,QAAS,kBAAMrB,EAAiBM,EAAKU,gBAJvC,SAME,cAAC,IAAD,CAAUrB,SAAS,gBAhBVY,SAyBnB,6GC5DAf,EAAYC,YAAW,CAC3B6B,IAAK,CACHC,UAAW,KACXC,QAAS,OACTC,eAAgB,UAElB/B,MAAO,CACLC,SAAU,SACVE,WAAY,UAsDD6B,MAlDf,WAAuB,IAAD,EACcC,mBAAS,IADvB,mBACb5B,EADa,KACF6B,EADE,KAEdC,EAAUC,cACV7B,EAAUT,IAMVuC,EAAe,uCAAG,4BAAAC,EAAA,+EAEG3C,EAAM4C,IAAI,cAFb,OAEdC,EAFc,OAGpBN,EAAaM,EAASC,MACtBC,QAAQC,IAAIH,GAJQ,yGAAH,qDAgBrB,OARAI,qBAAU,WACRP,MACC,IAOD,qBAAKhB,UAAWd,EAAQqB,IAAxB,SACE,eAACZ,EAAA,EAAD,CAAMJ,MAAI,EAACiC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,gBAAgB7B,WAAW,SAAnD,UACE,cAACE,EAAA,EAAD,CAAYC,UAAWd,EAAQP,MAA/B,uBACA,cAACgD,EAAA,EAAD,CACEC,KAAK,QACL/C,MAAM,UACNgD,QAAQ,YACRvB,QAbiB,WACzBQ,EAAQgB,KAAK,qBAQP,gCASF,8BACE,cAAC,EAAD,CACE9C,UAAWA,EACXC,iBArCe,SAAC8C,GACxBjB,EAAQgB,KAAR,qBAA2BC,e,yBCpBzBC,EAAiBC,YAAY,CACjCC,KAAM,YACNC,aAAc,CACZC,MAAO,CACLC,SAAU,IAEZrD,UAAW,IAEbsD,SAAU,CACRzB,aAAc,SAAC0B,EAAOC,GACpBD,EAAMvD,UAAYwD,EAAOC,SAE3BC,SAAU,SAACH,EAAOC,GAChBD,EAAMH,MAAMC,SAAWG,EAAOC,Y,EAKMT,EAAeW,QAA1C9B,E,EAAAA,aAAc6B,E,EAAAA,SAEhBE,EAAa,SACxBC,EACAC,GAFwB,8CAGX,WAAMC,GAAN,iBAAA9B,EAAA,+EAEY3C,EAAM4C,IAAN,iBAAoB2B,IAFhC,OAEL1B,EAFK,OAGHkB,EAAalB,EAASC,KAAtBiB,SACRU,EAASL,EAASL,IACbA,GACHS,IANS,gDASXA,IACAzB,QAAQC,IAAR,MAVW,yDAHW,uDAiBb0B,EAAiB,SAC5BH,GAD4B,8CAEf,WAAME,GAAN,iBAAA9B,EAAA,+EAEY3C,EAAM4C,IAAN,qBAAwB2B,IAFpC,OAEL1B,EAFK,OAGHC,EAASD,EAATC,KACR2B,EAASlC,EAAaO,IAJX,gDAMXC,QAAQC,IAAR,MANW,yDAFe,uDAYfU,IAAf,Q,qEC1BMvD,GAAYC,YAAW,CAC3Ba,KAAM,CACJ0D,QAAS,OAEXtE,MAAO,CACLsE,QAAS,SAyCEC,OArCf,YAAqD,IAAxBC,EAAuB,EAAvBA,SACrBjE,EAAUT,KADkC,EAEZmC,oBAAS,GAFG,mBAE3CwC,EAF2C,KAE9BC,EAF8B,KAQlD,OACE,cAAC5D,EAAA,EAAD,CAAUC,QAAM,EAACY,QALO,WACxB+C,GAAgBD,IAIhB,SACE,eAACzD,EAAA,EAAD,CAAMK,UAAWd,EAAQK,KAAMK,WAAS,EAAC0D,UAAU,SAAnD,UACE,eAAC3D,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAAS6B,QAAQ,gBAA5C,UACE,cAAC/B,EAAA,EAAD,CAAMJ,MAAI,EAAV,SACE,eAACI,EAAA,EAAD,CAAMK,UAAWd,EAAQP,MAAOiB,WAAS,EAACC,WAAW,SAArD,UACE,cAAC,IAAD,CAAmBjB,SAAS,UAC5B,cAACmB,EAAA,EAAD,UAAaoD,EAASlD,qBAG1B,cAACN,EAAA,EAAD,CAAMJ,MAAI,EAAV,SACG6D,EAAc,cAAC,IAAD,IAAsB,cAAC,IAAD,SAGzC,cAAC/D,EAAA,EAAD,IACC+D,GACC,eAACzD,EAAA,EAAD,WACE,eAACI,EAAA,EAAD,2BACgBoD,EAASI,wBAEzB,eAACxD,EAAA,EAAD,0BAAyBoD,EAASK,cAClC,eAACzD,EAAA,EAAD,wBAAuBoD,EAASM,qBCrC7B1E,OAdf,YAAkD,IAAzBC,EAAwB,EAAxBA,UACvB,OACE,8BACGA,EAAUG,OAAS,EAClBH,EAAUM,KAAI,SAACC,EAAgBC,GAAjB,OACZ,cAAC,GAAD,CAA8B2D,SAAU5D,GAAjBC,MAGzB,uECCFf,GAAYC,YAAW,CAC3BgF,KAAM,CACJT,QAAS,MACTU,MAAO,MACPC,UAAW,UA0DAC,OAtDf,WACE,IAAM3E,EAAUT,KACRqF,EAAcC,cAAdD,UACFhD,EAAUC,cACVgC,EAAWiB,cAJG,EAKSC,aAAY,SAAC1B,GAAD,OAAsBA,EAAMH,SAA7DpD,EALY,EAKZA,UAAWoD,EALC,EAKDA,MALC,EAMwBxB,oBAAS,GANjC,mBAMbsD,EANa,KAMIC,EANJ,KAQdC,EAAU,WACdtD,EAAQuD,UAGJC,EAAgB,uCAAG,sBAAArD,EAAA,sDACvB8B,EAASH,EAAWkB,EAAWM,IAC/BrB,EAASC,EAAec,IAFD,2CAAH,qDAatB,OAJAvC,qBAAU,WACR+C,MACC,IAGD,qBAAKC,MAAO,CAAEtB,QAAS,MAAOxC,QAAS,OAAQC,eAAgB,UAA/D,SACE,cAAC8D,EAAA,EAAD,CAAOxE,UAAWd,EAAQwE,KAA1B,SACE,eAAC/D,EAAA,EAAD,CAAMC,WAAS,EAAC0D,UAAU,SAA1B,UACE,eAAC3D,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAA3B,UACE,cAAC,IAAD,CAAmBjB,SAAS,UAC5B,cAACmB,EAAA,EAAD,CAAY8B,QAAQ,KAApB,SAA0BO,EAAMC,cAElC,cAAChD,EAAA,EAAD,IACA,gCACE,eAACM,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,gBAAgB7B,WAAW,SAAnD,UACE,cAACE,EAAA,EAAD,wBACA,cAACI,EAAA,EAAD,CAAYG,QApBI,WAC1B6D,GAAkBD,IAmBR,SACGA,EAAkB,cAAC,IAAD,IAAsB,cAAC,IAAD,SAG7C,cAAC7E,EAAA,EAAD,IACC6E,GACC,cAAC9E,EAAA,EAAD,UACE,cAAC,GAAD,CAAcJ,UAAWA,iB,0FChDnCP,GAAYC,YAAW,CAC3BkB,UAAW,CACTqD,QAAS,OACTW,UAAW,OACXa,SAAU,QAEZ9F,MAAO,CACL+F,UAAW,UAEbC,YAAa,CACXD,UAAW,UAEbE,WAAY,CACVC,gBAAiB,SAEnBC,WAAY,CACVC,WAAY,SA6IDC,GAzIW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,YAAuB,EACtBtE,mBAAoB,CACpDyB,SAAU,GACV8C,SAAU,GACVC,gBAAiB,KAJqC,mBACjDC,EADiD,KACtCC,EADsC,OAMd1E,oBAAS,GANK,mBAMjD2E,EANiD,KAMjCC,EANiC,OAOtB5E,mBAAkB,CAClD6E,WAAW,EACXC,WAAW,IAT2C,mBAOjDC,EAPiD,KAOpCC,EAPoC,KAWlD1G,EAAUT,KAeVoH,EAAe,SACnBC,GAEAR,EAAa,6BAAKD,GAAN,mBAAkBS,EAAMC,OAAO7D,KAAO4D,EAAMC,OAAOC,UAiB3DC,EAAS,uCAAG,8BAAAhF,EAAA,6DAChBuE,GAAgB,GADA,SAGNnD,EAAuBgD,EAAvBhD,SAAU8C,EAAaE,EAAbF,SAHJ,SAIS7G,EAAM4H,KAAK,SAAU,CAC1C7D,WACA8C,aANY,cAQdK,GAAgB,GAxClBF,EAAa,CACXjD,SAAU,GACV8C,SAAU,GACVC,gBAAiB,KAEnBI,GAAgB,GAChBI,EAAW,CACTH,WAAW,EACXC,WAAW,IAkCXE,EAAW,CAAEF,WAAW,EAAMD,WAAW,IAV3B,kDAYdD,GAAgB,GAChBI,EAAW,CAAEF,WAAW,EAAMD,WAAW,IAb3B,0DAAH,qDAiBf,OACE,cAACU,GAAA,EAAD,CAAQlB,KAAMA,EAAMmB,aAAW,EAACC,QAASnB,EAAzC,SACE,cAACV,EAAA,EAAD,UACE,sBAAM8B,SAlCS,SAACR,GACpBA,EAAMS,iBAD0D,IAExDlE,EAAwCgD,EAAxChD,SAAU8C,EAA8BE,EAA9BF,SAAUC,EAAoBC,EAApBD,gBAG1B/C,GACA8C,GACAC,GACAD,IAAaC,GAEba,KAwBE,SACE,eAACtG,EAAA,EAAD,CACEK,UAAWd,EAAQU,UACnBA,WAAS,EACT0D,UAAU,SACV5B,QAAQ,eAJV,UAME,cAAC3B,EAAA,EAAD,CAAYC,UAAWd,EAAQP,MAA/B,4BACA,cAAC6H,GAAA,EAAD,CACEC,SAAUZ,EACVG,MAAOX,EAAUhD,SACjBR,QAAQ,WACR6E,MAAM,WACNxE,KAAK,WACLyE,UAAQ,EACRC,KAAK,SAEP,cAACJ,GAAA,EAAD,CACEC,SAAUZ,EACVG,MAAOX,EAAUF,SACjBtD,QAAQ,WACR6E,MAAM,WACNxE,KAAK,WACLyE,UAAQ,EACRC,KAAK,aAEP,cAACJ,GAAA,EAAD,CACEC,SAAUZ,EACVG,MAAOX,EAAUD,gBACjBvD,QAAQ,WACR6E,MAAM,mBACNxE,KAAK,kBACLyE,UAAQ,EACRC,KAAK,aAENrB,EACC,qBAAKvF,UAAWd,EAAQyF,YAAxB,SACE,cAACkC,GAAA,EAAD,MAGF,eAAClF,EAAA,EAAD,CACEE,QAAQ,YACRhD,MAAM,UACN+H,KAAK,SACL5G,UACE2F,EAAYD,UACRC,EAAYF,UACVvG,EAAQ0F,WACR1F,EAAQ4F,WACV,GATR,UAYGa,EAAYD,UACXC,EAAYF,UACV,cAAC,KAAD,IAEA,cAAC,KAAD,IAGF,GAnBJ,sBChIRhH,GAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,SACVC,MAAO,QACPC,WAAY,aAyCDgI,OArCf,YAA4D,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,cACtB9H,EAAUT,KAEhB,OACE,eAACW,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACC0H,EAAO5H,OAAS,EACf4H,EAAOzH,KAAI,SAACC,EAAaC,GAAd,OACT,eAACC,EAAA,EAAD,CAAsBC,QAAM,EAA5B,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAA3B,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAmBlB,SAAS,QAAQC,MAAM,cAE5C,cAACkB,EAAA,EAAD,CAAYC,UAAWd,EAAQP,MAA/B,SAAuCY,EAAK8C,cAE9C,cAACnC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,MACLC,aAAW,OACXxB,MAAM,UACNyB,QAAS,kBAAM0G,EAAczH,EAAK8C,WAJpC,SAME,cAAC,IAAD,CAAUzD,SAAS,gBAdVY,MAoBjB,iHCtDFf,GAAYC,YAAW,CAC3BgF,KAAM,CACJlD,UAAW,KACXC,QAAS,OACTC,eAAgB,UAElB/B,MAAO,CACLC,SAAU,SACVE,WAAY,UA0DDmI,OAtDf,WAAoB,IAAD,EACWrG,mBAAS,IADpB,mBACVmG,EADU,KACFG,EADE,OAEmBtG,oBAAS,GAF5B,mBAEVuG,EAFU,KAEEC,EAFF,KAGXtG,EAAUC,cACV7B,EAAUT,KAeV4I,EAAW,uCAAG,4BAAApG,EAAA,+EAEO3C,EAAM4C,IAAI,WAFjB,OAEVC,EAFU,OAGhB+F,EAAU/F,EAASC,MACnBC,QAAQC,IAAIH,GAJI,yGAAH,qDAYjB,OAJAI,qBAAU,WACR8F,MACC,IAGD,qBAAKrH,UAAWd,EAAQwE,KAAxB,SACE,eAAC/D,EAAA,EAAD,CAAMJ,MAAI,EAACiC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,gBAAgB7B,WAAW,SAAnD,UACE,cAACE,EAAA,EAAD,CAAYC,UAAWd,EAAQP,MAA/B,oBACA,cAACgD,EAAA,EAAD,CACEC,KAAK,QACLC,QAAQ,YACRhD,MAAM,UACNyB,QA9BS,WACjB8G,GAAc,IAyBR,6BASF,8BACE,cAAC,GAAD,CAAWL,OAAQA,EAAQC,cAxCb,SAAC3E,GACrBvB,EAAQgB,KAAR,kBAAwBO,SAyCpB,cAAC,GAAD,CAAmB4C,KAAMkC,EAAYjC,YAlCvB,WAClBkC,GAAc,GACdC,a,8GC9BEC,GAAqBrF,YAAY,CACrCC,KAAM,gBACNC,aAAc,CACZoF,kBAAmB,CACjBtH,cAAe,GACfsD,qBAAsB,GACtBC,WAAY,GACZC,SAAU,GACV+D,WAAY,IAEdC,OAAQ,CACNC,YAAY,EACZC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,GAElBC,WAAY,CAAC,CAAEC,eAAgB,GAAIC,sBAAuB,KAC1DjB,OAAQ,GACRkB,QAAS,IAEX3F,SAAU,CACR4F,qBAAsB,SAAC3F,EAAOC,GAC5BD,EAAMgF,kBAAoB/E,EAAOC,SAEnC0F,cAAe,SAAC5F,EAAOC,GACrBD,EAAMuF,WAAatF,EAAOC,SAE5ByE,UAAW,SAAC3E,EAAOC,GACjBD,EAAMwE,OAASvE,EAAOC,QACtBF,EAAM0F,QAAUzF,EAAOC,QAAQtD,QAEjCiJ,cAAe,SAAC7F,EAAOC,GACrBD,EAAMkF,OAAOC,WAAalF,EAAOC,SAEnC4F,kBAAmB,SAAC9F,EAAOC,GACzBD,EAAMkF,OAAOE,eAAiBnF,EAAOC,SAEvC6F,gBAAiB,SAAC/F,EAAOC,GACvBD,EAAMkF,OAAOG,aAAepF,EAAOC,SAErC8F,kBAAmB,SAAChG,EAAOC,GACzBD,EAAMkF,OAAOI,eAAiBrF,EAAOC,Y,GAavC6E,GAAmB3E,QAPrBuF,G,GAAAA,qBACAC,G,GAAAA,cACAjB,G,GAAAA,UACAkB,G,GAAAA,cACAC,G,GAAAA,kBACAC,G,GAAAA,gBACAC,G,GAAAA,kBA2DajB,MAAf,QCxCekB,OApEf,YAAsD,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,SAC5BZ,EAAa7D,aACjB,SAAC1B,GAAD,OAAsBA,EAAMY,SAAS2E,cAEjC/E,EAAWiB,cACX2E,EAAe,CACnBb,cAEF,OACE,cAACnI,EAAA,EAAD,CAAMC,WAAS,EAAC0D,UAAU,SAASzD,WAAW,SAA9C,SACE,cAAC,KAAD,CACE+I,cAAeD,EACfrC,SAAU,SAAAuC,GACRxH,QAAQC,IAAIuH,EAAOf,YACnB/E,EAASoF,GAAcU,EAAOf,aAC9BW,KALJ,SAQG,gBAAGI,EAAH,EAAGA,OAAH,OACC,eAAC,KAAD,WACE,cAAC,KAAD,CAAY3G,KAAK,aAAjB,SACG,gBAAG4G,EAAH,EAAGA,OAAQhH,EAAX,EAAWA,KAAX,OACC,eAACnC,EAAA,EAAD,CAAMC,WAAS,EAAC0D,UAAU,SAA1B,UACGuF,EAAOf,WAAWxI,KAAI,SAACC,EAAMC,GAAP,OACrB,eAACG,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,eAAe7B,WAAW,SAAlD,UACE,eAACF,EAAA,EAAD,CAAMC,WAAS,EAAC0D,UAAU,SAA1B,UACE,cAAC,KAAD,CACEpB,KAAI,qBAAgB1C,EAAhB,qBAKN,cAAC,KAAD,CACE0C,KAAI,qBAAgB1C,EAAhB,+BAMR,cAACmC,EAAA,EAAD,CAAQrB,QAAS,kBAAMwI,EAAOtJ,IAA9B,SACE,cAAC,KAAD,YAIN,cAACmC,EAAA,EAAD,CACErB,QAAS,kBACPwB,EAAK,CACHiG,eAAgB,GAChBC,sBAAuB,MAJ7B,SAQE,cAAC,KAAD,YAKR,eAACrI,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,SAAxB,UACE,cAACC,EAAA,EAAD,CAAQrB,QAASoI,EAAjB,sBACA,cAAC/G,EAAA,EAAD,CAAQiF,KAAK,SAAb,8B,UCbCmC,OAhDf,YAA4C,IAAlBL,EAAiB,EAAjBA,SAClB3F,EAAWiB,cADwB,EAESC,aAChD,SAAC1B,GAAD,OAAsBA,EAAMY,YADtBoE,EAFiC,EAEjCA,kBAAmBO,EAFc,EAEdA,WAAYf,EAFE,EAEFA,OAGvCxF,qBAAU,WACRwB,EF+FuB,uCAAgB,WAAMA,GAAN,eAAA9B,EAAA,+EAEhB3C,EAAM4C,IAAI,WAFM,OAEjCC,EAFiC,OAGvC4B,EAASmE,GAAU/F,EAASC,OAHW,gDAKvCC,QAAQC,IAAR,MALuC,yDAAhB,yDE9FtB,IAEH,IAAM0H,EAAc,uCAAG,4BAAA/H,EAAA,+EAEI3C,EAAM4H,KAAK,YAAa,CAC7C/C,SAAUoE,EACVO,WAAYA,EACZf,OAAQA,IALS,OAEb5F,EAFa,OAOnBE,QAAQC,IAAIH,GAPO,gDASnBE,QAAQC,IAAR,MATmB,yDAAH,qDAkBpB,OACE,8BACE,uBAAMgF,SARW,SAACR,GACpBA,EAAMS,iBACNlF,QAAQC,IAAIiG,EAAmBO,EAAYf,GAC3CiC,KAKE,UACE,cAACrH,EAAA,EAAD,sBACCoF,EAAOzH,KAAI,SAACC,EAAWC,GACtB,OACE,eAACG,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,SAAS7B,WAAW,SAA5C,UACE,4BAAIN,EAAK8C,WACT,cAAC4G,GAAA,EAAD,CAAOrC,KAAK,mBAIlB,eAACjH,EAAA,EAAD,WACE,cAACgC,EAAA,EAAD,CAAQrB,QAASoI,EAAjB,sBACA,cAAC/G,EAAA,EAAD,CAAQiF,KAAK,SAAb,6B,UC9BJnI,GAAYC,YAAW,CAC3BwK,eAAgB,CACdjG,QAAS,OACTkG,OAAQ,OACRxF,MAAO,OAETyF,gBAAiB,CACfnG,QAAS,OACTkG,OAAQ,OACRxF,MAAO,SA2II0F,OAvIf,YAAuC,IAAdZ,EAAa,EAAbA,KACjBvJ,EAAUT,KACVsE,EAAWiB,cACXzB,EAAQ0B,aACZ,SAAC1B,GAAD,OAAsBA,EAAMY,SAASoE,qBAJH,EAWhCtD,aAAY,SAAC1B,GAAD,OAAsBA,EAAMY,SAASsE,UAJnDC,EAPkC,EAOlCA,WACAE,EARkC,EAQlCA,aACAD,EATkC,EASlCA,eACAE,EAVkC,EAUlCA,eAaIhC,EAAe,SACnBC,GAEA/C,EACEmF,GAAqB,6BAChB3F,GADe,mBAEjBuD,EAAMC,OAAO7D,KAAO4D,EAAMC,OAAOC,WAKxC,OACE,sBAAMM,SAtBa,SAACR,GHiBU,IAChCwD,EAgBAC,EACAC,EAcAC,EGhDE3D,EAAMS,iBACNxD,GHgBFuG,EGhB8B/G,EAAMtC,cHeJ,uCAEnB,WAAM8C,GAAN,iBAAA9B,EAAA,+EAEY3C,EAAM4C,IAAN,oBAAuBoI,IAFnC,OAELnI,EAFK,OAGHC,EAASD,EAATC,KAEN2B,EAASqF,GADE,KAAThH,IAJO,gDAUXC,QAAQC,IAAR,MAVW,yDAFmB,wDGd9ByB,GH+BFwG,EG/B8BhH,EAAMiB,WHgCpCgG,EGhCgDjH,EAAMkB,SHiCzC,SAAAV,GACb,IAAM2G,EAAQC,KAAOJ,GACTI,KAAOH,IACRE,GACT3G,EAASuF,IAAgB,IACzBvF,EAASsF,IAAkB,MAE3BtF,EAASuF,IAAgB,IACzBvF,EAASsF,IAAkB,QGxC3BtF,GH6CF0G,EG7CkClH,EAAMiF,WH4CJ,uCAEvB,WAAMzE,GAAN,iBAAA9B,EAAA,+EAEY3C,EAAM4C,IAAN,gCAAmCuI,IAF/C,OAELtI,EAFK,OAGHC,EAASD,EAATC,KAEN2B,EAASwF,GADE,KAATnH,IAJO,gDAUXC,QAAQC,IAAR,MAVW,yDAFuB,wDG3C7BoG,GAAeE,GAAiBD,GAAmBE,GACtDY,KAgBF,SACE,eAACmB,GAAA,EAAD,CACE3G,QAAQ,OACRxC,QAAQ,OACRoJ,cAAc,SACdhK,WAAW,SAJb,UAME,eAACF,EAAA,EAAD,CACEK,UAAWd,EAAQgK,eACnBtJ,WAAS,EACT0D,UAAU,SACV5B,QAAQ,eAJV,UAME,cAAC8E,GAAA,EAAD,CACEC,SAAUZ,EACV3D,KAAK,gBACL8D,MAAOzD,EAAMtC,cACb2G,KAAK,OACLkD,MAAOpC,EACPqC,WACErC,GAAc,+CAEhB7F,QAAQ,WACR6E,MAAM,kBACNC,UAAQ,IAEV,cAACH,GAAA,EAAD,CACEC,SAAUZ,EACV3D,KAAK,uBACL8D,MAAOzD,EAAMgB,qBACbqD,KAAK,OACL/E,QAAQ,WACR6E,MAAM,cACNC,UAAQ,OAGZ,cAACtH,EAAA,EAAD,IACA,eAACM,EAAA,EAAD,CACEK,UAAWd,EAAQkK,gBACnBxJ,WAAS,EACT0D,UAAU,SACV5B,QAAQ,eAJV,UAME,cAAC8E,GAAA,EAAD,CACEC,SAAUZ,EACV3D,KAAK,aACL8D,MAAOzD,EAAMiB,WACb3B,QAAQ,WACR6E,MAAM,aACNE,KAAK,OACLkD,MAAOnC,EACPoC,WAAYpC,GAAkB,2BAC9BhB,UAAQ,EACRqD,gBAAiB,CACfC,QAAQ,KAGZ,cAACzD,GAAA,EAAD,CACEC,SAAUZ,EACV3D,KAAK,WACL8D,MAAOzD,EAAMkB,SACb5B,QAAQ,WACR6E,MAAM,WACNE,KAAK,OACLkD,MAAOlC,EACPmC,WAAYnC,GAAgB,2BAC5BjB,UAAQ,EACRqD,gBAAiB,CACfC,QAAQ,KAGZ,cAACzD,GAAA,EAAD,CACEC,SAAUZ,EACV3D,KAAK,aACL8D,MAAOzD,EAAMiF,WACbZ,KAAK,OACL/E,QAAQ,WACR6E,MAAM,aACNoD,MAAOjC,EACPkC,WACElC,GAAkB,uCAEpBlB,UAAQ,OAGZ,cAAChH,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,SAAxB,SACE,cAACC,EAAA,EAAD,CACEE,QAAQ,YACR+E,KAAK,SACLhF,KAAK,QACL/C,MAAM,UAJR,+CClGKqL,OAhDf,WAA4B,IAAD,EACWtJ,mBAAS,GADpB,mBAClBuJ,EADkB,KACNC,EADM,KASnBC,EAAe,WACfF,EAAa,GACfC,EAAcD,EAAa,IAIzBG,EAAW,WACXH,EAAa,GACfC,EAAcD,EAAa,IAiB/B,OACE,gCACE,cAACI,GAAA,EAAD,CAASJ,WAAYA,EAArB,SAjCU,CACZ,kCACA,kBACA,eA+BW7K,KAAI,SAACkL,EAAMhL,GAAP,OACT,cAACiL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UAAYF,KADHA,QAjBI,SAACA,GACtB,OAAQA,GACN,KAAK,EACH,OAAO,cAAC,GAAD,CAAc/B,KAAM6B,IAC7B,KAAK,EACH,OAAO,cAAC,GAAD,CAAmB7B,KAAM6B,EAAU5B,SAAU2B,IACtD,KAAK,EACH,OAAO,cAAC,GAAD,CAAe3B,SAAU2B,IAClC,QACE,MAAO,iBAaRM,CAAeR,OC9ChB1L,GAAYC,YAAW,CAC3BgF,KAAM,CACJmB,gBAAiB,UACjBlB,MAAO,OACPC,UAAW,OACX/E,MAAO,WASI+L,OALf,WACE,IAAM1L,EAAUT,KAChB,OAAO,qBAAKuB,UAAWd,EAAQwE,KAAxB,qBCXHjF,GAAYC,YAAW,CAC3BgF,KAAM,CACFE,UAAW,UASFiH,OALf,YAA+C,IAAlBC,EAAiB,EAAjBA,SACrB5L,EAAUT,KAChB,OAAO,qBAAKuB,UAAWd,EAAQwE,KAAxB,SAA+BoH,K,8BCFjC,SAASC,GAAUC,GAAuB,IACvCF,EAAqCE,EAArCF,SAAU9E,EAA2BgF,EAA3BhF,MAAOxG,EAAoBwL,EAApBxL,MAAUyL,EADW,aACDD,EADC,8BAG9C,OACE,+CACEE,KAAK,WACLC,OAAQnF,IAAUxG,EAClB4L,GAAE,0BAAqB5L,GACvB6L,kBAAA,qBAA+B7L,IAC3ByL,GALN,aAOGjF,IAAUxG,GACT,cAACoK,GAAA,EAAD,CAAK0B,EAAG,EAAR,SACE,cAACvL,EAAA,EAAD,UAAa+K,SAOhB,SAASS,GAAW/L,GACzB,MAAO,CACL4L,GAAG,cAAD,OAAgB5L,GAClB,gBAAgB,mBAAhB,OAAoCA,IC5BxC,IAYMgM,GAAuBvJ,YAAY,CACvCC,KAAM,kBACNC,aAdmB,CACnBgB,SAAU,CACRlD,cAAe,GACfsD,qBAAsB,GACtBiE,WAAY,GACZiE,aAAc,IAEhB3D,WAAY,GACZf,OAAQ,GACR2E,QAAS,IAMTpJ,SAAU,CACRqJ,YADQ,SACKpJ,EAAOC,GAClBD,EAAMY,SAAWX,EAAOC,SAE1B0F,cAJQ,SAIO5F,EAAOC,GACpBD,EAAMuF,WAAatF,EAAOC,SAE5ByE,UAPQ,SAOG3E,EAAOC,GAChBD,EAAMwE,OAASvE,EAAOC,SAExBmJ,WAVQ,SAUIrJ,EAAOC,GACjBD,EAAMmJ,QAAUlJ,EAAOC,Y,GAUzB+I,GAAqB7I,QAJvBgJ,G,GAAAA,YACAxD,G,GAAAA,cACAjB,G,GAAAA,UACA0E,G,GAAAA,WA6DaJ,MAAf,QC7DM/M,GAAYC,YAAW,CAC3BgF,KAAM,CACJlD,UAAW,MAEbZ,UAAW,CACT6E,SAAU,OAEZoH,sBAAuB,CACrB5I,QAAS,OACTW,UAAW,QAEbjF,MAAO,CACLC,SAAU,QAEZkN,SAAU,CACRlN,SAAU,YA2CCmN,OAvCf,YAAmD,IAAxBhK,EAAuB,EAAvBA,aACnB7C,EAAUT,KACVsE,EAAWiB,cAETb,EAAac,aAAY,SAAC1B,GAAD,OAAsBA,EAAMyJ,mBAArD7I,SAMR,OAJA5B,qBAAU,WACRwB,EDvByB,SAC3BhB,GAD2B,8CAEd,WAAMgB,GAAN,eAAA9B,EAAA,+EAEY3C,EAAM4C,IAAN,oBAAuBa,IAFnC,OAELZ,EAFK,OAGX4B,EAAS4I,GAAYxK,EAASC,OAHnB,gDAKXC,QAAQC,IAAR,MALW,yDAFc,sDCuBhB2K,CAAclK,MACtB,IAGD,cAACpC,EAAA,EAAD,CAAMK,UAAWd,EAAQU,UAAzB,SACE,eAACD,EAAA,EAAD,CACEK,UAAWd,EAAQ2M,sBACnBjM,WAAS,EACT0D,UAAU,SACV5B,QAAQ,eAJV,UAME,cAAC3B,EAAA,EAAD,CAAYC,UAAWd,EAAQP,MAAOkD,QAAQ,KAA9C,SACGsB,EAASlD,gBAEZ,cAACZ,EAAA,EAAD,IACA,cAACU,EAAA,EAAD,CAAYC,UAAWd,EAAQ4M,SAAUjK,QAAQ,KAAjD,SACGsB,EAASI,uBAEZ,cAACiD,GAAA,EAAD,CACE3E,QAAQ,WACR6E,MAAM,aACNwF,UAAQ,EACRlG,MAAO7C,EAASqE,aAElB,cAAC7F,EAAA,EAAD,CAAQE,QAAQ,YAAYhD,MAAM,UAAlC,8B,oBC1COsN,OA3Bf,YAAgD,IAAzBpK,EAAwB,EAAxBA,aACfgB,EAAWiB,cACT+C,EAAW9C,aAAY,SAAC1B,GAAD,OAAsBA,EAAMyJ,mBAAnDjF,OAKR,OAHAxF,qBAAU,WACRwB,EFuCuB,SACzBhB,GADyB,8CAEZ,WAAMgB,GAAN,eAAA9B,EAAA,+EAEU3C,EAAM4C,IAAN,kBAAqBa,IAF/B,OAELgF,EAFK,OAGXhE,EAASmE,GAAUH,EAAO3F,OAHf,gDAKXC,QAAQC,IAAR,MALW,yDAFY,sDEvCd+F,CAAYtF,MACpB,IAED,8BACE,cAAC3C,EAAA,EAAD,UACG2H,EAAO5H,OAAS,EACf4H,EAAOzH,KAAI,SAACC,EAAaC,GAAd,OACT,eAACC,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UACE,cAACsM,GAAA,EAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAS/M,EAAK8C,aAJf7C,MAQjB,4CCUK+M,OA7Bf,YAAoD,IAAzBxK,EAAwB,EAAxBA,aACnBgB,EAAWiB,cACT8D,EAAe7D,aACrB,SAAC1B,GAAD,OAAsBA,EAAMyJ,mBADtBlE,WAOR,OAHAvG,qBAAU,WACRwB,EHyB2B,SAC7BhB,GAD6B,8CAEhB,WAAMgB,GAAN,eAAA9B,EAAA,+EAEc3C,EAAM4C,IAAN,sBAAyBa,IAFvC,OAEL+F,EAFK,OAGX/E,EAASoF,GAAcL,EAAW1G,OAHvB,gDAKXC,QAAQC,IAAR,MALW,yDAFgB,sDGzBlBN,CAAgBe,MACxB,IAED,8BACE,cAAC3C,EAAA,EAAD,UACG0I,EAAW3I,OAAS,EACnB2I,EAAWxI,KAAI,SAACC,EAAiBC,GAAlB,OACb,eAACC,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UACE,cAACsM,GAAA,EAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAS/M,EAAKwI,mBAJfvI,MAQjB,4C,kBCRKgN,GApBQ,SAAC,GAAyB,IAAvBpL,EAAsB,EAAtBA,KACxB,OACE,qBAAKmD,MAAO,CAAEZ,MAAO,QAArB,SACE,eAAC,KAAD,CAAOvC,KAAMA,EAAb,UACE,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,CACEvC,MAAM,UACN4N,WAAW,cACXC,cAAc,iBACdxK,KAAK,cAEP,cAAC,KAAD,CAAOyK,KAAK,qBACZ,cAAC,KAAD,IACA,cAAC,KAAD,UCyBOC,OAxCf,YAA6C,IAAzB7K,EAAwB,EAAxBA,aACZgB,EAAWiB,cADyB,EAEZC,aAC5B,SAAC1B,GAAD,OAAsBA,EAAMyJ,mBADtB7I,EAFkC,EAElCA,SAAUuI,EAFwB,EAExBA,QAalB,OALAnK,qBAAU,WACJ4B,EAASsI,cACX1I,EL+DsB,SAC1BhB,GAD0B,8CAEb,WAAMgB,GAAN,eAAA9B,EAAA,+EAEY3C,EAAM4C,IAAN,iBAAoBa,IAFhC,OAELZ,EAFK,OAGX4B,EAAS6I,GAAWzK,EAASC,OAHlB,gDAKXC,QAAQC,IAAR,MALW,yDAFa,sDK/DbuL,CAAa9K,MAEvB,CAACgB,EAAUI,EAASsI,eAErB,8BACGtI,EAASsI,aACR,8BAAMC,EAAQvM,OAAS,GAAK,cAAC,GAAD,CAAgBiC,KAAMsK,MAElD,cAAC/L,EAAA,EAAD,CACE4E,MAAO,CAAE4E,OAAQ,QACjBvJ,WAAS,EACT0D,UAAU,SACV5B,QAAQ,SACR7B,WAAW,SALb,SAOE,cAAC8B,EAAA,EAAD,CACErB,QAtBmB,WAC3ByC,ELsDkC,SACpChB,GADoC,8CAEvB,WAAMgB,GAAN,eAAA9B,EAAA,+EAEY3C,EAAM4H,KAAN,oBAAgC,CACrDnE,aAAcA,IAHL,8BAKazD,EAAM4C,IAAN,oBAAuBa,IALpC,OAKL/C,EALK,OAMX+D,EAAS4I,GAAY3M,EAAUoC,OANpB,kDAQXC,QAAQC,IAAR,MARW,0DAFuB,sDKtDzBwL,CAAuB/K,KAsBxBlD,MAAM,UACNgD,QAAQ,YAHV,kCC5BJpD,GAAYC,aAAW,SAACqO,GAAD,MAAmB,CAC9CrJ,KAAM,CACJsJ,SAAU,EACVnI,gBAAiBkI,EAAME,QAAQlI,WAAWmI,WA2C/BC,OAvCf,WACE,IAAMjO,EAAUT,KADY,EAEF2O,IAAMxM,SAAS,GAFb,mBAErBoF,EAFqB,KAEdqH,EAFc,KAGpBtL,EAAiBgC,cAAjBhC,aAMR,OACE,sBAAK/B,UAAWd,EAAQwE,KAAxB,UACE,cAAC4J,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAW,EAArC,SACE,eAACC,GAAA,EAAD,CACEzH,MAAOA,EACPS,SATa,SAACX,EAA8B4H,GAClDL,EAASK,IASHrN,aAAW,sBAHb,UAKE,cAACsN,GAAA,EAAD,cAAKjH,MAAM,UAAa6E,GAAU,KAClC,cAACoC,GAAA,EAAD,cAAKjH,MAAM,UAAa6E,GAAU,KAClC,cAACoC,GAAA,EAAD,cAAKjH,MAAM,cAAiB6E,GAAU,KACtC,cAACoC,GAAA,EAAD,cAAKjH,MAAM,WAAc6E,GAAU,UAGvC,cAACR,GAAD,CAAU/E,MAAOA,EAAOxG,MAAO,EAA/B,SACE,cAAC,GAAD,CAAgBuC,aAAcA,MAEhC,cAACgJ,GAAD,CAAU/E,MAAOA,EAAOxG,MAAO,EAA/B,SACE,cAAC,GAAD,CAAYuC,aAAcA,MAE5B,cAACgJ,GAAD,CAAU/E,MAAOA,EAAOxG,MAAO,EAA/B,SACE,cAAC,GAAD,CAAgBuC,aAAcA,MAEhC,cAACgJ,GAAD,CAAU/E,MAAOA,EAAOxG,MAAO,EAA/B,SACE,cAAC,GAAD,CAASuC,aAAcA,UCxCzBtD,GAAYC,YAAW,CAC3Ba,KAAM,CACJoE,MAAO,UAsCIiK,OAlCf,YAAqC,IAAfC,EAAc,EAAdA,MACd3O,EAAUT,KADkB,EAEAmC,oBAAS,GAFT,mBAE3BkN,EAF2B,KAEhBC,EAFgB,KAQlC,OACE,eAACpO,EAAA,EAAD,CAAMK,UAAWd,EAAQK,KAAzB,UACE,eAACI,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,gBAAgB7B,WAAW,SAAnD,UACE,cAACE,EAAA,EAAD,oBACA,cAAC4B,EAAA,EAAD,CAAQrB,QARU,WACtByN,GAAcD,IAOV,SACGA,EAAY,cAAC,IAAD,IAAsB,cAAC,IAAD,SAGvC,cAACzO,EAAA,EAAD,IACCyO,GACC,cAAC1O,EAAA,EAAD,UACGyO,EAAM1O,OAAS,GACd0O,EAAMvO,KAAI,SAAC0O,EAAWxO,GAAZ,OACR,qCACE,cAACC,EAAA,EAAD,CAAsBC,QAAM,EAA5B,SACE,cAACK,EAAA,EAAD,UAAaiO,KADAxO,GAGf,cAACH,EAAA,EAAD,gBCjCVZ,GAAYC,YAAW,CAC3BgF,KAAM,CACJuK,OAAQ,QAEVrO,UAAW,CACT6E,SAAU,QAEZyJ,UAAW,CACTvK,MAAO,QAETwK,QAAS,CAAEtP,MAAO,QAASgG,gBAAiB,SAC5CuJ,QAAS,CAAEvP,MAAO,QAASgG,gBAAiB,SAgG/BwJ,OA7Ff,WACE,IAAMnP,EAAUT,KADC,EAEiBmC,mBAAS,IAF1B,mBAEV6I,EAFU,KAEC6E,EAFD,OAG2B1N,mBAAS,CACnD2N,SAAS,EACTC,QAAQ,IALO,mBAGVC,EAHU,KAGMC,EAHN,OAOS9N,mBAAmB,IAP5B,mBAOViN,EAPU,KAOHc,EAPG,KAaXC,EAAU,uCAAG,4BAAA3N,EAAA,+EAEQ3C,IAAM4C,IAAN,UAAauI,EAAb,UAFR,qBAGfiF,EAAkB,CAAEH,SAAS,EAAMC,QAAQ,IAH5B,SAIKlQ,IAAM4C,IAAN,UAAauI,EAAb,WAJL,OAIToE,EAJS,OAKfc,EAASd,EAAMzM,MALA,kDAOfsN,EAAkB,CAAEH,SAAS,EAAMC,QAAQ,IAP5B,0DAAH,qDAehB,OACE,eAAC7O,EAAA,EAAD,CAAMK,UAAWd,EAAQwE,KAAM9D,WAAS,EAAC8B,QAAQ,SAAjD,UACE,cAAC3B,EAAA,EAAD,CAAY8B,QAAQ,KAApB,sCACA,eAAClC,EAAA,EAAD,CAAMC,WAAS,EAAC0D,UAAU,SAASzD,WAAW,SAA9C,UACE,+BACE,eAACF,EAAA,EAAD,CACEK,UAAWd,EAAQU,UACnBA,WAAS,EACTC,WAAW,SACX6B,QAAQ,gBAJV,UAME,cAAC8E,GAAA,EAAD,CACExG,UAAWd,EAAQgP,UACnBzH,SAhCS,SAACX,GACpBwI,EAAaxI,EAAMC,OAAOC,QAgChBA,MAAOyD,EACP5H,QAAQ,WACR6E,MAAM,aACNC,UAAQ,EACRmD,QACE2E,EAAeF,UACXE,EAAeD,OAKrBzE,WACE0E,EAAeF,QACXE,EAAeD,OACb,GACA,2BACF,KAGR,cAAC7M,EAAA,EAAD,CACErB,QAtCa,WACvBsO,KAsCU/P,MAAM,UACNgD,QAAQ,YACR7B,UACEyO,EAAeF,QACXE,EAAeD,OACbtP,EAAQiP,QACRjP,EAAQkP,QACV,GATR,wBAgBHK,EAAeF,SAAWE,EAAeD,QACxC,qCACE,cAAC,GAAD,CAAWX,MAAOA,IAClB,eAAClO,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,SAAS7B,WAAW,SAA5C,UACE,cAAC2G,GAAA,EAAD,CAAW3E,QAAQ,aACnB,cAACF,EAAA,EAAD,CAAQ9C,MAAM,UAAUgD,QAAQ,YAAhC,kCC7FRpD,GAAYC,YAAW,CAC3BmQ,KAAM,CACJpO,QAAS,OACTC,eAAgB,eAChBb,WAAY,SACZjB,SAAU,SACV,WAAY,CACVC,MAAO,SAET,MAAO,CACLiQ,eAAgB,WAuDPC,OAlDf,WACE,IAAMC,EAASvQ,KACf,OACE,gCACE,eAAC,KAAD,WACE,cAAC6O,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAAC5N,EAAA,EAAD,CAAMC,WAAS,EAAC8B,QAAQ,gBAAxB,UACE,eAACuN,EAAA,EAAD,CAASjP,UAAWgP,EAAOH,KAA3B,UACE,cAAC,KAAD,CAAMK,GAAG,UAAT,SACE,cAAC/O,EAAA,EAAD,uBAEF,cAAC,KAAD,CAAM+O,GAAG,aAAT,SACE,cAAC/O,EAAA,EAAD,0BAEF,cAAC,KAAD,CAAM+O,GAAG,WAAT,SACE,cAAC/O,EAAA,EAAD,2BAGJ,cAACA,EAAA,EAAD,0BAGJ,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgP,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,2BAAZ,SAEE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,GAAD,cAKR,cAAC,GAAD,Q,SCnEAC,GAAcC,aAAgB,CAClCtD,gBAAiBR,GACjBrI,SAAUoM,GACVnN,MAAOJ,IAWMwN,GAPDC,YAAe,CAC3BC,QAASL,KCTXM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.3cf73bb3.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://agile-lake-39533.herokuapp.com'\r\n})\r\n\r\nexport default instance\r\n","import React from 'react'\r\nimport {\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  Typography,\r\n  makeStyles,\r\n  Divider,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport LabelIcon from '@material-ui/icons/Label'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\ninterface Election {\r\n  election_name: string\r\n  election_description: string\r\n}\r\n\r\ninterface PropsTypes {\r\n  elections: Election[]\r\n  goToElectionMenu: Function\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: '1.8rem',\r\n    color: 'black',\r\n    fontWeight: 'lighter'\r\n  }\r\n})\r\n\r\nfunction ElectionList ({ elections, goToElectionMenu }: PropsTypes) {\r\n  const classes = useStyles()\r\n\r\n  if (elections.length > 0) {\r\n    return (\r\n      <List>\r\n        <Divider />\r\n        {elections.map((item: Election, index: number) => (\r\n          <ListItem key={index} button>\r\n            <Grid container alignItems='center'>\r\n              <ListItemAvatar>\r\n                <LabelIcon fontSize='large' color='primary' />\r\n              </ListItemAvatar>\r\n              <Typography className={classes.title}>\r\n                {item.election_name}\r\n              </Typography>\r\n            </Grid>\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge='end'\r\n                aria-label='edit'\r\n                color='primary'\r\n                onClick={() => goToElectionMenu(item.election_name)}\r\n              >\r\n                <EditIcon fontSize='large' />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        There are no elections. Click create elections to start election\r\n        creator.\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ElectionList\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from '../../axios/axios'\r\nimport { Button, Grid, Typography, makeStyles } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ElectionList from './election-list/ElectionList'\r\n\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    marginTop: '2%',\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  title: {\r\n    fontSize: '1.9rem',\r\n    fontWeight: 'bold'\r\n  }\r\n})\r\n\r\nfunction Elections () {\r\n  const [elections, setElections] = useState([])\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n\r\n  const goToElectionMenu = (electionName: string) => {\r\n    history.push(`/elections/${electionName}`)\r\n  }\r\n\r\n  const fetchCandidates = async () => {\r\n    try {\r\n      const response = await axios.get('/elections')\r\n      setElections(response.data)\r\n      console.log(response)\r\n    } catch (error) {}\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCandidates()\r\n  }, [])\r\n\r\n  const goToCreateElection = () => {\r\n    history.push('/election/create')\r\n  }\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <Grid item xs={12} md={6}>\r\n        <Grid container justify='space-between' alignItems='center'>\r\n          <Typography className={classes.title}>Elections</Typography>\r\n          <Button\r\n            size='large'\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={goToCreateElection}\r\n          >\r\n            Create Election\r\n          </Button>\r\n        </Grid>\r\n        <div>\r\n          <ElectionList\r\n            elections={elections}\r\n            goToElectionMenu={goToElectionMenu}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Elections\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { AppThunk } from '../store/store'\r\nimport axios from '../axios/axios'\r\n\r\nconst voterMenuSlice = createSlice({\r\n  name: 'voterMenu',\r\n  initialState: {\r\n    voter: {\r\n      username: ''\r\n    },\r\n    elections: []\r\n  },\r\n  reducers: {\r\n    setElections: (state, action) => {\r\n      state.elections = action.payload\r\n    },\r\n    setVoter: (state, action) => {\r\n      state.voter.username = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setElections, setVoter } = voterMenuSlice.actions\r\n\r\nexport const fetchVoter = (\r\n  voterName: string,\r\n  err: any\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`/voter/${voterName}`)\r\n    const { username } = response.data\r\n    dispatch(setVoter(username))\r\n    if (!username) {\r\n      err()\r\n    }\r\n  } catch (error) {\r\n    err()\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchElections = (\r\n  voterName: string\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`/elections/${voterName}`)\r\n    const { data } = response\r\n    dispatch(setElections(data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport default voterMenuSlice.reducer\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  Grid,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Typography,\r\n  Divider,\r\n  makeStyles\r\n} from '@material-ui/core'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined'\r\n\r\ninterface Election {\r\n  election_name: string\r\n  election_description: string\r\n  start_date: string\r\n  end_date: string\r\n}\r\n\r\ninterface PropTypes {\r\n  election: Election\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  item: {\r\n    padding: '8px'\r\n  },\r\n  title: {\r\n    padding: '6px'\r\n  }\r\n})\r\n\r\nfunction ElectionListItem ({ election }: PropTypes) {\r\n  const classes = useStyles()\r\n  const [showDetails, setShowDetails] = useState(false)\r\n\r\n  const toggleShowDetails = () => {\r\n    setShowDetails(!showDetails)\r\n  }\r\n\r\n  return (\r\n    <ListItem button onClick={toggleShowDetails}>\r\n      <Grid className={classes.item} container direction='column'>\r\n        <Grid container alignItems='center' justify='space-between'>\r\n          <Grid item>\r\n            <Grid className={classes.title} container alignItems='center'>\r\n              <LabelOutlinedIcon fontSize='large' />\r\n              <Typography>{election.election_name}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            {showDetails ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        {showDetails && (\r\n          <Grid>\r\n            <Typography>\r\n              Description: {election.election_description}\r\n            </Typography>\r\n            <Typography>Start date: {election.start_date}</Typography>\r\n            <Typography>End date: {election.end_date}</Typography>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default ElectionListItem\r\n","import React from 'react'\r\nimport ElectionListItem from './ElectionListItem'\r\n\r\ninterface Election {\r\n  election_name: string\r\n  election_description: string\r\n  start_date: string\r\n  end_date: string\r\n}\r\n\r\ninterface PropTypes {\r\n  elections: Election[]\r\n}\r\n\r\nfunction ElectionList ({ elections }: PropTypes) {\r\n  return (\r\n    <div>\r\n      {elections.length > 0 ? (\r\n        elections.map((item: Election, index) => (\r\n          <ElectionListItem key={index} election={item} />\r\n        ))\r\n      ) : (\r\n        <div>User is not assigned to election.</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ElectionList\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Grid,\r\n  List,\r\n  Paper,\r\n  Typography,\r\n  makeStyles,\r\n  Divider,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchElections, fetchVoter } from '../../features/voterMenuSlice'\r\nimport { RootState } from '../../store/store'\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport ElectionList from './election-list/ElectionList'\r\n\r\ninterface Params {\r\n  votername: string\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: '8px',\r\n    width: '70%',\r\n    minHeight: '60vh'\r\n  }\r\n})\r\n\r\nfunction VoterMenu () {\r\n  const classes = useStyles()\r\n  const { votername } = useParams<Params>()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { elections, voter } = useSelector((state: RootState) => state.voter)\r\n  const [isElectionsShow, setElectionsShow] = useState(false)\r\n\r\n  const onError = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const fetchInitialData = async () => {\r\n    dispatch(fetchVoter(votername, onError))\r\n    dispatch(fetchElections(votername))\r\n  }\r\n\r\n  const toggleShowElections = () => {\r\n    setElectionsShow(!isElectionsShow)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchInitialData()\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ padding: '8px', display: 'flex', justifyContent: 'center' }}>\r\n      <Paper className={classes.root}>\r\n        <Grid container direction='column'>\r\n          <Grid container alignItems='center'>\r\n            <AccountCircleIcon fontSize=\"large\" />\r\n            <Typography variant='h6'>{voter.username}</Typography>\r\n          </Grid>\r\n          <Divider />\r\n          <div>\r\n            <Grid container justify='space-between' alignItems='center'>\r\n              <Typography>Elections</Typography>\r\n              <IconButton onClick={toggleShowElections}>\r\n                {isElectionsShow ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Divider/>\r\n            {isElectionsShow && (\r\n              <List>\r\n                <ElectionList elections={elections} />\r\n              </List>\r\n            )}\r\n          </div>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoterMenu\r\n","import {\r\n  Dialog,\r\n  Grid,\r\n  Input,\r\n  Paper,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  Typography,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport React, { useState } from 'react'\r\nimport axios from '../../axios/axios'\r\n\r\ninterface LoginData {\r\n  username: string\r\n  password: string\r\n  confirmPassword: string\r\n}\r\n\r\ninterface Success {\r\n  isSuccess: boolean\r\n  isTouched: boolean\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    padding: '12px',\r\n    minHeight: '35vh',\r\n    minWidth: '20vw'\r\n  },\r\n  title: {\r\n    textAlign: 'center'\r\n  },\r\n  progressBar: {\r\n    textAlign: 'center'\r\n  },\r\n  successBtn: {\r\n    backgroundColor: 'green'\r\n  },\r\n  failureBtn: {\r\n    background: 'red'\r\n  }\r\n})\r\n\r\nconst CreateVoterDialog = ({ open, handleClose }: any) => {\r\n  const [loginData, setLoginData] = useState<LoginData>({\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n  const [isProgressShow, setProgressShow] = useState(false)\r\n  const [showSuccess, setSuccess] = useState<Success>({\r\n    isSuccess: false,\r\n    isTouched: false\r\n  })\r\n  const classes = useStyles()\r\n\r\n  const reset = () => {\r\n    setLoginData({\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    })\r\n    setProgressShow(false)\r\n    setSuccess({\r\n      isSuccess: false,\r\n      isTouched: false\r\n    })\r\n  }\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    setLoginData({ ...loginData, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    const { username, password, confirmPassword } = loginData\r\n\r\n    if (\r\n      username &&\r\n      password &&\r\n      confirmPassword &&\r\n      password === confirmPassword\r\n    ) {\r\n      sendLogin()\r\n    }\r\n  }\r\n\r\n  const sendLogin = async () => {\r\n    setProgressShow(true)\r\n    try {\r\n      const { username, password } = loginData\r\n      const response = await axios.post('/voter', {\r\n        username,\r\n        password\r\n      })\r\n      setProgressShow(false)\r\n      reset()\r\n      setSuccess({ isTouched: true, isSuccess: true })\r\n    } catch (error) {\r\n      setProgressShow(false)\r\n      setSuccess({ isTouched: true, isSuccess: false })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} keepMounted onClose={handleClose}>\r\n      <Paper>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid\r\n            className={classes.container}\r\n            container\r\n            direction='column'\r\n            justify='space-evenly'\r\n          >\r\n            <Typography className={classes.title}>Register voter</Typography>\r\n            <TextField\r\n              onChange={handleChange}\r\n              value={loginData.username}\r\n              variant='outlined'\r\n              label='Username'\r\n              name='username'\r\n              required\r\n              type='text'\r\n            />\r\n            <TextField\r\n              onChange={handleChange}\r\n              value={loginData.password}\r\n              variant='outlined'\r\n              label='Password'\r\n              name='password'\r\n              required\r\n              type='password'\r\n            />\r\n            <TextField\r\n              onChange={handleChange}\r\n              value={loginData.confirmPassword}\r\n              variant='outlined'\r\n              label='Confirm password'\r\n              name='confirmPassword'\r\n              required\r\n              type='password'\r\n            />\r\n            {isProgressShow ? (\r\n              <div className={classes.progressBar}>\r\n                <CircularProgress />\r\n              </div>\r\n            ) : (\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                type='submit'\r\n                className={\r\n                  showSuccess.isTouched\r\n                    ? showSuccess.isSuccess\r\n                      ? classes.successBtn\r\n                      : classes.failureBtn\r\n                    : ''\r\n                }\r\n              >\r\n                {showSuccess.isTouched ? (\r\n                  showSuccess.isSuccess ? (\r\n                    <CheckIcon />\r\n                  ) : (\r\n                    <ErrorIcon />\r\n                  )\r\n                ) : (\r\n                  ''\r\n                )}\r\n                Submit\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default CreateVoterDialog\r\n","import React from 'react'\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  Divider,\r\n  makeStyles,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\ninterface Voter {\r\n  username: string\r\n}\r\n\r\ninterface PropsTypes {\r\n  voters: Voter[]\r\n  goToVoterMenu: Function\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: '1.8rem',\r\n    color: 'black',\r\n    fontWeight: 'lighter'\r\n  }\r\n})\r\n\r\nfunction VoterList ({ voters, goToVoterMenu }: PropsTypes) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <List>\r\n      <Divider />\r\n      {voters.length > 0 ? (\r\n        voters.map((item: Voter, index) => (\r\n          <ListItem key={index} button>\r\n            <Grid container alignItems='center'>\r\n              <ListItemAvatar>\r\n                <AccountCircleIcon fontSize='large' color='primary' />\r\n              </ListItemAvatar>\r\n              <Typography className={classes.title}>{item.username}</Typography>\r\n            </Grid>\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge='end'\r\n                aria-label='edit'\r\n                color='primary'\r\n                onClick={() => goToVoterMenu(item.username)}\r\n              >\r\n                <EditIcon fontSize='large' />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))\r\n      ) : (\r\n        <div>\r\n          There are no voters in database. Click create voter to open voter\r\n          creator.\r\n        </div>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default VoterList\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from '../../axios/axios'\r\nimport { Button, Grid, Typography, makeStyles } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport CreateVoterDialog from './CreateVoterDialog'\r\nimport VoterList from './voters-list/VoterList'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: '2%',\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  title: {\r\n    fontSize: '1.9rem',\r\n    fontWeight: 'bold'\r\n  }\r\n})\r\n\r\nfunction Voters () {\r\n  const [voters, setVoters] = useState([])\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n\r\n  const goToVoterMenu = (username: string) => {\r\n    history.push(`/voters/${username}`)\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpenDialog(false)\r\n    fetchVoters()\r\n  }\r\n\r\n  const fetchVoters = async () => {\r\n    try {\r\n      const response = await axios.get('/voters')\r\n      setVoters(response.data)\r\n      console.log(response)\r\n    } catch (error) {}\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchVoters()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid item xs={12} md={6}>\r\n        <Grid container justify='space-between' alignItems='center'>\r\n          <Typography className={classes.title}>Voters</Typography>\r\n          <Button\r\n            size='large'\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={handleOpen}\r\n          >\r\n            Create Voter\r\n          </Button>\r\n        </Grid>\r\n        <div>\r\n          <VoterList voters={voters} goToVoterMenu={goToVoterMenu} />\r\n        </div>\r\n        <CreateVoterDialog open={openDialog} handleClose={handleClose} />\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Voters\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { AppThunk } from '../store/store'\r\nimport moment from 'moment'\r\nimport axios from '../axios/axios'\r\n\r\nconst electionsFormSlice = createSlice({\r\n  name: 'electionsForm',\r\n  initialState: {\r\n    electionFormState: {\r\n      election_name: '',\r\n      election_description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      server_url: ''\r\n    },\r\n    errors: {\r\n      titleError: false,\r\n      startDateError: false,\r\n      endDateError: false,\r\n      serverUrlError: false\r\n    },\r\n    candidates: [{ candidate_name: '', candidate_description: '' }],\r\n    voters: [],\r\n    checked: []\r\n  },\r\n  reducers: {\r\n    setElectionFormState: (state, action) => {\r\n      state.electionFormState = action.payload\r\n    },\r\n    setCandidates: (state, action) => {\r\n      state.candidates = action.payload\r\n    },\r\n    setVoters: (state, action) => {\r\n      state.voters = action.payload\r\n      state.checked = action.payload.length\r\n    },\r\n    setTitleError: (state, action) => {\r\n      state.errors.titleError = action.payload\r\n    },\r\n    setStartDateError: (state, action) => {\r\n      state.errors.startDateError = action.payload\r\n    },\r\n    setEndDateError: (state, action) => {\r\n      state.errors.endDateError = action.payload\r\n    },\r\n    setServerUrlError: (state, action) => {\r\n      state.errors.serverUrlError = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  setElectionFormState,\r\n  setCandidates,\r\n  setVoters,\r\n  setTitleError,\r\n  setStartDateError,\r\n  setEndDateError,\r\n  setServerUrlError\r\n} = electionsFormSlice.actions\r\n\r\nexport const checkIfTitleExists = (\r\n  electionTitle: string\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`/election/${electionTitle}`)\r\n    const { data } = response\r\n    if (data !== '') {\r\n      dispatch(setTitleError(true))\r\n    } else {\r\n      dispatch(setTitleError(false))\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const checkIfDateMatches = (\r\n  startDate: string,\r\n  endDate: string\r\n): AppThunk => dispatch => {\r\n  const start = moment(startDate)\r\n  const end = moment(endDate)\r\n  if (end <= start) {\r\n    dispatch(setEndDateError(true))\r\n    dispatch(setStartDateError(true))\r\n  } else {\r\n    dispatch(setEndDateError(false))\r\n    dispatch(setStartDateError(false))\r\n  }\r\n}\r\n\r\nexport const checkIfServerUrlExists = (\r\n  serverUrl: string\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`/serverUrl/?serverUrl=${serverUrl}`)\r\n    const { data } = response\r\n    if (data !== '') {\r\n      dispatch(setServerUrlError(true))\r\n    } else {\r\n      dispatch(setServerUrlError(false))\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchVoters = (): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await axios.get('/voters')\r\n    dispatch(setVoters(response.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport default electionsFormSlice.reducer\r\n","import { Button, Grid, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { Field, FieldArray, Form, Formik } from 'formik'\r\nimport { RootState } from '../../../store/store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCandidates } from '../../../features/electionFormSlice'\r\n\r\nfunction AddCandidatesForm ({ next, previous }: any) {\r\n  const candidates = useSelector(\r\n    (state: RootState) => state.election.candidates\r\n  )\r\n  const dispatch = useDispatch()\r\n  const initialValue = {\r\n    candidates\r\n  }\r\n  return (\r\n    <Grid container direction='column' alignItems='center'>\r\n      <Formik\r\n        initialValues={initialValue}\r\n        onSubmit={values => {\r\n          console.log(values.candidates)\r\n          dispatch(setCandidates(values.candidates))\r\n          next()\r\n        }}\r\n      >\r\n        {({ values }) => (\r\n          <Form>\r\n            <FieldArray name='candidates'>\r\n              {({ remove, push }) => (\r\n                <Grid container direction='column'>\r\n                  {values.candidates.map((item, index) => (\r\n                    <Grid container justify='space-evenly' alignItems='center'>\r\n                      <Grid container direction='column'>\r\n                        <Field\r\n                          name={`candidates.${index}.candidate_name`}\r\n                          // component={TextField}\r\n                          // variant='outlined'\r\n                          // label='Candidate'\r\n                        />\r\n                        <Field\r\n                          name={`candidates.${index}.candidate_description`}\r\n                          // component={TextField}\r\n                          // variant='outlined'\r\n                          // label='Description'\r\n                        />\r\n                      </Grid>\r\n                      <Button onClick={() => remove(index)}>\r\n                        <RemoveIcon />\r\n                      </Button>\r\n                    </Grid>\r\n                  ))}\r\n                  <Button\r\n                    onClick={() =>\r\n                      push({\r\n                        candidate_name: '',\r\n                        candidate_description: ''\r\n                      })\r\n                    }\r\n                  >\r\n                    <AddIcon />\r\n                  </Button>\r\n                </Grid>\r\n              )}\r\n            </FieldArray>\r\n            <Grid container justify='center'>\r\n              <Button onClick={previous}>Previous</Button>\r\n              <Button type='submit'>Next</Button>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AddCandidatesForm\r\n","import { Button, Grid, Input } from '@material-ui/core'\r\nimport axios from '../../../axios/axios'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchVoters } from '../../../features/electionFormSlice'\r\nimport { RootState } from '../../../store/store'\r\n\r\nfunction AddVotersForm ({ previous }: any) {\r\n  const dispatch = useDispatch()\r\n  const { electionFormState, candidates, voters } = useSelector(\r\n    (state: RootState) => state.election\r\n  )\r\n  useEffect(() => {\r\n    dispatch(fetchVoters())\r\n  }, [])\r\n\r\n  const createElection = async () => {\r\n    try {\r\n      const response = await axios.post('/election', {\r\n        election: electionFormState,\r\n        candidates: candidates,\r\n        voters: voters\r\n      })\r\n      console.log(response)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    console.log(electionFormState, candidates, voters)\r\n    createElection()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <Button>Add all</Button>\r\n        {voters.map((item: any, index) => {\r\n          return (\r\n            <Grid container justify='center' alignItems='center'>\r\n              <p>{item.username}</p>\r\n              <Input type='checkbox' />\r\n            </Grid>\r\n          )\r\n        })}\r\n        <Grid>\r\n          <Button onClick={previous}>Previous</Button>\r\n          <Button type='submit'>Submit</Button>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddVotersForm\r\n","import {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  TextField\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  checkIfDateMatches,\r\n  checkIfServerUrlExists,\r\n  checkIfTitleExists,\r\n  setElectionFormState\r\n} from '../../../features/electionFormSlice'\r\nimport { RootState } from '../../../store/store'\r\n\r\nconst useStyles = makeStyles({\r\n  firstContainer: {\r\n    padding: '10px',\r\n    height: '20vh',\r\n    width: '60%'\r\n  },\r\n  secondContainer: {\r\n    padding: '10px',\r\n    height: '30vh',\r\n    width: '60%'\r\n  }\r\n})\r\n\r\nfunction ElectionForm ({ next }: any) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(\r\n    (state: RootState) => state.election.electionFormState\r\n  )\r\n  const {\r\n    titleError,\r\n    endDateError,\r\n    startDateError,\r\n    serverUrlError\r\n  } = useSelector((state: RootState) => state.election.errors)\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    dispatch(checkIfTitleExists(state.election_name))\r\n    dispatch(checkIfDateMatches(state.start_date, state.end_date))\r\n    dispatch(checkIfServerUrlExists(state.server_url))\r\n    if (!titleError && !endDateError && !startDateError && !serverUrlError) {\r\n      next()\r\n    }\r\n  }\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    dispatch(\r\n      setElectionFormState({\r\n        ...state,\r\n        [event.target.name]: event.target.value\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Box\r\n        padding='12px'\r\n        display='flex'\r\n        flexDirection='column'\r\n        alignItems='center'\r\n      >\r\n        <Grid\r\n          className={classes.firstContainer}\r\n          container\r\n          direction='column'\r\n          justify='space-evenly'\r\n        >\r\n          <TextField\r\n            onChange={handleChange}\r\n            name='election_name'\r\n            value={state.election_name}\r\n            type='text'\r\n            error={titleError}\r\n            helperText={\r\n              titleError && 'Election with provided title already exists.'\r\n            }\r\n            variant='outlined'\r\n            label='Elections title'\r\n            required\r\n          />\r\n          <TextField\r\n            onChange={handleChange}\r\n            name='election_description'\r\n            value={state.election_description}\r\n            type='text'\r\n            variant='outlined'\r\n            label='Description'\r\n            required\r\n          />\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          className={classes.secondContainer}\r\n          container\r\n          direction='column'\r\n          justify='space-evenly'\r\n        >\r\n          <TextField\r\n            onChange={handleChange}\r\n            name='start_date'\r\n            value={state.start_date}\r\n            variant='outlined'\r\n            label='Start date'\r\n            type='date'\r\n            error={startDateError}\r\n            helperText={startDateError && 'You provided wrong date.'}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n          <TextField\r\n            onChange={handleChange}\r\n            name='end_date'\r\n            value={state.end_date}\r\n            variant='outlined'\r\n            label='End date'\r\n            type='date'\r\n            error={endDateError}\r\n            helperText={endDateError && 'You provided wrong date.'}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n          <TextField\r\n            onChange={handleChange}\r\n            name='server_url'\r\n            value={state.server_url}\r\n            type='text'\r\n            variant='outlined'\r\n            label='Server url'\r\n            error={serverUrlError}\r\n            helperText={\r\n              serverUrlError && 'Server with this url already exists.'\r\n            }\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid container justify='center'>\r\n          <Button\r\n            variant='contained'\r\n            type='submit'\r\n            size='large'\r\n            color='primary'\r\n          >\r\n            Check and proceed further\r\n          </Button>\r\n        </Grid>\r\n      </Box>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ElectionForm\r\n","import { Step, StepLabel, Stepper } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport AddCandidatesForm from './AddCandidatesForm'\r\nimport AddVotersForm from './AddVotersForm'\r\nimport ElectionForm from './ElectionForm'\r\n\r\nfunction CreateElection () {\r\n  const [activeStep, setActiveStep] = useState(0)\r\n\r\n  const steps = [\r\n    'Provide elections informations.',\r\n    'Add candidates.',\r\n    'Add voters.'\r\n  ]\r\n\r\n  const previousStep = () => {\r\n    if (activeStep > 0) {\r\n      setActiveStep(activeStep - 1)\r\n    }\r\n  }\r\n\r\n  const nextStep = () => {\r\n    if (activeStep < 2) {\r\n      setActiveStep(activeStep + 1)\r\n    }\r\n  }\r\n\r\n  const getStepContent = (step: number) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <ElectionForm next={nextStep} />\r\n      case 1:\r\n        return <AddCandidatesForm next={nextStep} previous={previousStep} />\r\n      case 2:\r\n        return <AddVotersForm previous={previousStep} />\r\n      default:\r\n        return 'Unknown step.'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((step, index) => (\r\n          <Step key={step}>\r\n            <StepLabel>{step}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {getStepContent(activeStep)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateElection\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#3f51b5',\r\n    width: '100%',\r\n    minHeight: '20vh',\r\n    color: 'white'\r\n  }\r\n})\r\n\r\nfunction Footer () {\r\n  const classes = useStyles()\r\n  return <div className={classes.root}>footer</div>\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n      minHeight: '80vh'\r\n  }\r\n})\r\n\r\nfunction ContentContainer ({ children }: any) {\r\n  const classes = useStyles()\r\n  return <div className={classes.root}>{children}</div>\r\n}\r\n\r\nexport default ContentContainer\r\n","import { Box, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode\r\n  index: any\r\n  value: any\r\n}\r\n\r\nexport function TabPanel (props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function a11yProps (index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`\r\n  }\r\n}\r\n\r\n\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { AppThunk } from '../store/store'\r\nimport axios from '../axios/axios'\r\n\r\nconst initialState = {\r\n  election: {\r\n    election_name: '',\r\n    election_description: '',\r\n    server_url: '',\r\n    is_published: ''\r\n  },\r\n  candidates: [],\r\n  voters: [],\r\n  results: []\r\n}\r\n\r\nconst electionManagerSlice = createSlice({\r\n  name: 'electionManager',\r\n  initialState: initialState,\r\n  reducers: {\r\n    setElection (state, action) {\r\n      state.election = action.payload\r\n    },\r\n    setCandidates (state, action) {\r\n      state.candidates = action.payload\r\n    },\r\n    setVoters (state, action) {\r\n      state.voters = action.payload\r\n    },\r\n    setResults (state, action) {\r\n      state.results = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  setElection,\r\n  setCandidates,\r\n  setVoters,\r\n  setResults\r\n} = electionManagerSlice.actions\r\n\r\nexport const fetchElection = (\r\n  electionName: string\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`/election/${electionName}`)\r\n    dispatch(setElection(response.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchCandidates = (\r\n  electionName: string\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const candidates = await axios.get(`/candidates/${electionName}`)\r\n    dispatch(setCandidates(candidates.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchVoters = (\r\n  electionName: string\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const voters = await axios.get(`/voters/${electionName}`)\r\n    dispatch(setVoters(voters.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const publishElectionResults = (\r\n  electionName: string\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await axios.post(`/election/publish`, {\r\n      electionName: electionName\r\n    })\r\n    const elections = await axios.get(`/election/${electionName}`)\r\n    dispatch(setElection(elections.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchResults = (\r\n  electionName: string\r\n): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`/score/${electionName}`)\r\n    dispatch(setResults(response.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport default electionManagerSlice.reducer\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchElection } from '../../../../features/electionManagerSlice'\r\nimport { RootState } from '../../../../store/store'\r\n\r\ninterface Params {\r\n  electionName: string\r\n}\r\n\r\ninterface Props {\r\n  electionName: string\r\n}\r\n\r\ninterface Elections {\r\n  election_name: string\r\n  election_description: string\r\n  start_date: string\r\n  end_date: string\r\n  server_url: string\r\n}\r\n\r\ninterface Candidate {\r\n  candidate_name: string\r\n  candidate_description: string\r\n}\r\n\r\ninterface Voter {\r\n  username: string\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: '2%'\r\n  },\r\n  container: {\r\n    minWidth: '80%'\r\n  },\r\n  electionInfoContainer: {\r\n    padding: '10px',\r\n    minHeight: '30vh'\r\n  },\r\n  title: {\r\n    fontSize: '2rem'\r\n  },\r\n  subTitle: {\r\n    fontSize: '1.6rem'\r\n  }\r\n})\r\n\r\nfunction ElectionStatus ({ electionName }: Props) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const { election } = useSelector((state: RootState) => state.electionManager)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchElection(electionName))\r\n  }, [])\r\n\r\n  return (\r\n    <Grid className={classes.container}>\r\n      <Grid\r\n        className={classes.electionInfoContainer}\r\n        container\r\n        direction='column'\r\n        justify='space-evenly'\r\n      >\r\n        <Typography className={classes.title} variant='h1'>\r\n          {election.election_name}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography className={classes.subTitle} variant='h2'>\r\n          {election.election_description}\r\n        </Typography>\r\n        <TextField\r\n          variant='outlined'\r\n          label='Server url'\r\n          disabled\r\n          value={election.server_url}\r\n        />\r\n        <Button variant='contained' color='primary'>\r\n          Change url\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ElectionStatus\r\n","import {\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText\r\n} from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchVoters } from '../../../../features/electionManagerSlice'\r\nimport { RootState } from '../../../../store/store'\r\n\r\ninterface Params {\r\n  electionName: string\r\n}\r\n\r\ninterface Voter {\r\n  username: string\r\n}\r\n\r\nfunction VotersMenu ({ electionName }: Params) {\r\n  const dispatch = useDispatch()\r\n  const { voters } = useSelector((state: RootState) => state.electionManager)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchVoters(electionName))\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <List>\r\n        {voters.length > 0 ? (\r\n          voters.map((item: Voter, index) => (\r\n            <ListItem key={index}>\r\n              <ListItemAvatar>\r\n                <Avatar />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={item.username} />\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <div>none</div>\r\n        )}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VotersMenu\r\n","import {\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText\r\n} from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchCandidates } from '../../../../features/electionManagerSlice'\r\nimport { RootState } from '../../../../store/store'\r\n\r\ninterface Params {\r\n  electionName: string\r\n}\r\n\r\ninterface Candidate {\r\n  candidate_name: string\r\n  candidate_description: string\r\n}\r\n\r\nfunction CandidatesMenu ({ electionName }: Params) {\r\n  const dispatch = useDispatch()\r\n  const { candidates } = useSelector(\r\n    (state: RootState) => state.electionManager\r\n  )\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCandidates(electionName))\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <List>\r\n        {candidates.length > 0 ? (\r\n          candidates.map((item: Candidate, index) => (\r\n            <ListItem key={index}>\r\n              <ListItemAvatar>\r\n                <Avatar />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={item.candidate_name} />\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <div>none</div>\r\n        )}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CandidatesMenu\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  BarSeries,\r\n  Tooltip,\r\n  Title\r\n} from '@devexpress/dx-react-chart-material-ui'\r\nimport { EventTracker } from '@devexpress/dx-react-chart'\r\n\r\ninterface PropTypes {\r\n  data: any[]\r\n}\r\n\r\nconst RenderBarChart = ({ data }: PropTypes) => {\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Chart data={data}>\r\n        <ArgumentAxis />\r\n        <ValueAxis />\r\n        <BarSeries\r\n          color='#3f51b5'\r\n          valueField='voteCounter'\r\n          argumentField='candidate_name'\r\n          name='Candidate'\r\n        />\r\n        <Title text='Election result.' />\r\n        <EventTracker />\r\n        <Tooltip />\r\n      </Chart>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderBarChart\r\n","import { Button, Grid } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  fetchResults,\r\n  publishElectionResults\r\n} from '../../../../features/electionManagerSlice'\r\nimport { RootState } from '../../../../store/store'\r\nimport RenderBarChart from '../../../common/chart/BarChart'\r\n\r\ninterface Params {\r\n  electionName: string\r\n}\r\n\r\nfunction Results ({ electionName }: Params) {\r\n  const dispatch = useDispatch()\r\n  const { election, results } = useSelector(\r\n    (state: RootState) => state.electionManager\r\n  )\r\n\r\n  const handleResultsPublish = () => {\r\n    dispatch(publishElectionResults(electionName))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (election.is_published) {\r\n      dispatch(fetchResults(electionName))\r\n    }\r\n  }, [dispatch, election.is_published])\r\n  return (\r\n    <div>\r\n      {election.is_published ? (\r\n        <div>{results.length > 0 && <RenderBarChart data={results} />}</div>\r\n      ) : (\r\n        <Grid\r\n          style={{ height: '60vh' }}\r\n          container\r\n          direction='column'\r\n          justify='center'\r\n          alignItems='center'\r\n        >\r\n          <Button\r\n            onClick={handleResultsPublish}\r\n            color='primary'\r\n            variant='contained'\r\n          >\r\n            Publish results\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import { AppBar, makeStyles, Tab, Tabs, Theme } from '@material-ui/core'\r\nimport { TabPanel, a11yProps } from './TabPanel'\r\nimport React from 'react'\r\nimport ElectionStatus from '../tabs-conent/ElectionStatus'\r\nimport { useParams } from 'react-router-dom'\r\nimport VotersMenu from '../tabs-conent/VotersMenu'\r\nimport CandidatesMenu from '../tabs-conent/CandidatesMenu'\r\nimport Results from '../tabs-conent/Results'\r\n\r\ninterface Params {\r\n  electionName: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}))\r\n\r\nfunction ElectionMenuPanel () {\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState(0)\r\n  const { electionName } = useParams<Params>()\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' elevation={0}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label='simple tabs example'\r\n        >\r\n          <Tab label='Status' {...a11yProps(0)} />\r\n          <Tab label='Voters' {...a11yProps(1)} />\r\n          <Tab label='Candidates' {...a11yProps(2)} />\r\n          <Tab label='Results' {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ElectionStatus electionName={electionName} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <VotersMenu electionName={electionName}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <CandidatesMenu electionName={electionName}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <Results electionName={electionName}/>\r\n      </TabPanel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ElectionMenuPanel\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n  makeStyles,\r\n  Grid,\r\n  Button\r\n} from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\n\r\nconst useStyles = makeStyles({\r\n  item: {\r\n    width: '70vw'\r\n  }\r\n})\r\n\r\nfunction PeersList ({ peers }: any) {\r\n  const classes = useStyles()\r\n  const [showPeers, setShowPeers] = useState(false)\r\n\r\n  const toggleShowPeers = () => {\r\n    setShowPeers(!showPeers)\r\n  }\r\n\r\n  return (\r\n    <Grid className={classes.item}>\r\n      <Grid container justify='space-between' alignItems='center'>\r\n        <Typography>Peers</Typography>\r\n        <Button onClick={toggleShowPeers}>\r\n          {showPeers ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n        </Button>\r\n      </Grid>\r\n      <Divider />\r\n      {showPeers && (\r\n        <List>\r\n          {peers.length > 0 &&\r\n            peers.map((peer: any, index: number) => (\r\n              <>\r\n                <ListItem key={index} button>\r\n                  <Typography>{peer}</Typography>\r\n                </ListItem>\r\n                <Divider />\r\n              </>\r\n            ))}\r\n        </List>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PeersList\r\n","import {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport PeersList from './PeersList'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '2% 0'\r\n  },\r\n  container: {\r\n    minWidth: '70vw'\r\n  },\r\n  textField: {\r\n    width: '60vw'\r\n  },\r\n  success: { color: 'black', backgroundColor: 'green' },\r\n  failure: { color: 'black', backgroundColor: 'red' }\r\n})\r\n\r\nfunction Server () {\r\n  const classes = useStyles()\r\n  const [serverUrl, setServerUrl] = useState('')\r\n  const [serverResponse, setServerResponse] = useState({\r\n    touched: false,\r\n    result: false\r\n  })\r\n  const [peers, setPeers] = useState<string[]>([])\r\n\r\n  const handleChange = (event: any) => {\r\n    setServerUrl(event.target.value)\r\n  }\r\n\r\n  const pingServer = async () => {\r\n    try {\r\n      const response = await axios.get(`${serverUrl}/ping`)\r\n      setServerResponse({ touched: true, result: true })\r\n      const peers = await axios.get(`${serverUrl}/peers`)\r\n      setPeers(peers.data)\r\n    } catch (error) {\r\n      setServerResponse({ touched: true, result: false })\r\n    }\r\n  }\r\n\r\n  const handleCheckClick = () => {\r\n    pingServer()\r\n  }\r\n\r\n  return (\r\n    <Grid className={classes.root} container justify='center'>\r\n      <Typography variant='h3'>Find blockchain network.</Typography>\r\n      <Grid container direction='column' alignItems='center'>\r\n        <form>\r\n          <Grid\r\n            className={classes.container}\r\n            container\r\n            alignItems='center'\r\n            justify='space-between'\r\n          >\r\n            <TextField\r\n              className={classes.textField}\r\n              onChange={handleChange}\r\n              value={serverUrl}\r\n              variant='outlined'\r\n              label='Server url'\r\n              required\r\n              error={\r\n                serverResponse.touched\r\n                  ? serverResponse.result\r\n                    ? false\r\n                    : true\r\n                  : false\r\n              }\r\n              helperText={\r\n                serverResponse.touched\r\n                  ? serverResponse.result\r\n                    ? ''\r\n                    : 'Server is not available.'\r\n                  : ''\r\n              }\r\n            />\r\n            <Button\r\n              onClick={handleCheckClick}\r\n              color='primary'\r\n              variant='contained'\r\n              className={\r\n                serverResponse.touched\r\n                  ? serverResponse.result\r\n                    ? classes.success\r\n                    : classes.failure\r\n                  : ''\r\n              }\r\n            >\r\n              Check\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n        {serverResponse.touched && serverResponse.result && (\r\n          <>\r\n            <PeersList peers={peers} />\r\n            <Grid container justify=\"center\" alignItems='center'>\r\n              <TextField variant='outlined' />\r\n              <Button color='primary' variant='contained'>\r\n                Connect\r\n              </Button>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Server\r\n","import { AppBar, Button, Grid, IconButton, Toolbar } from '@material-ui/core'\nimport React from 'react'\nimport './App.css'\nimport Elections from './components/election/Elections'\nimport VoterMenu from './components/voter/VoterMenu'\nimport Voters from './components/voter/Voters'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core'\nimport CreateElection from './components/election/create-election-form/CreateElection'\nimport Footer from './components/common/footer/Footer'\nimport ContentContainer from './components/common/container/ContentContainer'\nimport ElectionMenuPanel from './components/election/election-menu/tabs/ElectionMenuPanel'\nimport Server from './components/server/Server'\n\nconst useStyles = makeStyles({\n  link: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    fontSize: '1.3rem',\n    '& button': {\n      color: 'white'\n    },\n    '& a': {\n      textDecoration: 'none'\n    }\n  }\n})\n\nfunction App () {\n  const styles = useStyles()\n  return (\n    <div>\n      <Router>\n        <AppBar position='static'>\n          <Grid container justify='space-between'>\n            <Toolbar className={styles.link}>\n              <Link to='/voters'>\n                <IconButton>Voters</IconButton>\n              </Link>\n              <Link to='/elections'>\n                <IconButton>Elections</IconButton>\n              </Link>\n              <Link to='/servers'>\n                <IconButton>Servers</IconButton>\n              </Link>\n            </Toolbar>\n            <IconButton>Logout</IconButton>\n          </Grid>\n        </AppBar>\n        <ContentContainer>\n          <Switch>\n            <Route exact path='/voters'>\n              <Voters />\n            </Route>\n            <Route exact path='/elections'>\n              <Elections />\n            </Route>\n            <Route path='/servers'>\n              <Server />\n            </Route>\n            <Route path='/voters/:votername'>\n              <VoterMenu />\n            </Route>\n            <Route path='/elections/:electionName'>\n              {/* <ElectionsMenu /> */}\n              <ElectionMenuPanel />\n            </Route>\n            <Route path='/election/create'>\n              <CreateElection />\n            </Route>\n          </Switch>\n        </ContentContainer>\n      </Router>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore, Action } from '@reduxjs/toolkit'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\nimport electionFormSlice from '../features/electionFormSlice'\r\nimport voterMenuSlice from '../features/voterMenuSlice'\r\nimport electionManagerSlice from '../features/electionManagerSlice'\r\n\r\nconst rootReducer = combineReducers({\r\n  electionManager: electionManagerSlice,\r\n  election: electionFormSlice,\r\n  voter: voterMenuSlice\r\n})\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n})\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}